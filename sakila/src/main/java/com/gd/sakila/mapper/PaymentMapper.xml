<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.PaymentMapper">
	<!-- 반납용 payment에 amount 추가 -->
	<update id="updatePaymentForReturn" parameterType="com.gd.sakila.vo.Payment">
		UPDATE payment SET amount = #{amount}, payment_date = NOW() WHERE rental_id =  #{rentalId}
	</update>

	<!-- 일별 매출 자료 -->
	<select id="selectSalesByDay" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			YEAR(p.payment_date) year, 
			MONTH(p.payment_date) month, 
			DAY(p.payment_date) day,
			SUM(p.amount) amount, 
			s.store_id storeId
		FROM payment p  INNER JOIN staff s ON p.staff_id=s.staff_id
		WHERE YEAR(p.payment_date) = #{year} AND MONTH(p.payment_date) = #{month}
		GROUP BY YEAR(p.payment_date), MONTH(p.payment_date), DAY(p.payment_date), s.store_id
	</select>
	
	
	<!-- 월별 매출 자료 -->
	<select id="selectSalesByMonth" resultType="java.util.Map">
		SELECT
			CONCAT( Year(payment_date), '.', MONTH(payment_date)) date,
			SUM(amount) amount,
			s.store_id storeId
		FROM payment p  INNER JOIN staff s ON p.staff_id=s.staff_id
		GROUP BY Year(payment_date), MONTH(payment_date), s.store_id
	</select>
	
	<insert id="insertPayment" parameterType="com.gd.sakila.vo.Payment">
		INSERT INTO payment(customer_id, staff_id, rental_id, amount)
		 VALUES(#{customerId}, #{staffId}, #{rentalId}, #{amount})
	</insert>

	<!-- 고객의 총 구매금액 -->
	<select id="selectPaymentByCustomer" resultType="Double" parameterType="int">
		SELECT SUM(amount)
     			 FROM payment
     			 WHERE customer_id = #{customerId}
	</select>
</mapper>